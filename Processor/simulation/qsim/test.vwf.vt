// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "10/17/2021 00:30:02"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          test
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module test_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clock;
reg [31:0] data;
reg [11:0] rdaddress;
reg [11:0] wraddress;
reg wren;
// wires                                               
wire [31:0] q;

// assign statements (if any)                          
test i1 (
// port map - connection between master ports and signals/registers   
	.clock(clock),
	.data(data),
	.q(q),
	.rdaddress(rdaddress),
	.wraddress(wraddress),
	.wren(wren)
);
initial 
begin 
#1000000 $finish;
end 

// clock
always
begin
	clock = 1'b0;
	clock = #5000 1'b1;
	#5000;
end 
// data[ 31 ]
initial
begin
	data[31] = 1'b0;
	data[31] = #80000 1'b1;
	data[31] = #40000 1'b0;
	data[31] = #40000 1'b1;
	data[31] = #40000 1'b0;
	data[31] = #40000 1'b1;
	data[31] = #80000 1'b0;
	data[31] = #80000 1'b1;
	data[31] = #40000 1'b0;
	data[31] = #80000 1'b1;
	data[31] = #80000 1'b0;
	data[31] = #40000 1'b1;
	data[31] = #80000 1'b0;
	data[31] = #40000 1'b1;
	data[31] = #80000 1'b0;
	data[31] = #80000 1'b1;
	data[31] = #40000 1'b0;
end 
// data[ 30 ]
initial
begin
	data[30] = 1'b1;
	data[30] = #200000 1'b0;
	data[30] = #280000 1'b1;
	data[30] = #120000 1'b0;
	data[30] = #40000 1'b1;
	data[30] = #40000 1'b0;
	data[30] = #40000 1'b1;
	data[30] = #120000 1'b0;
	data[30] = #80000 1'b1;
	data[30] = #40000 1'b0;
end 
// data[ 29 ]
initial
begin
	data[29] = 1'b1;
	data[29] = #80000 1'b0;
	data[29] = #40000 1'b1;
	data[29] = #120000 1'b0;
	data[29] = #40000 1'b1;
	data[29] = #40000 1'b0;
	data[29] = #120000 1'b1;
	data[29] = #80000 1'b0;
	data[29] = #120000 1'b1;
	data[29] = #40000 1'b0;
	data[29] = #80000 1'b1;
	data[29] = #200000 1'b0;
end 
// data[ 28 ]
initial
begin
	data[28] = 1'b0;
	data[28] = #80000 1'b1;
	data[28] = #160000 1'b0;
	data[28] = #120000 1'b1;
	data[28] = #120000 1'b0;
	data[28] = #40000 1'b1;
	data[28] = #40000 1'b0;
	data[28] = #40000 1'b1;
	data[28] = #80000 1'b0;
	data[28] = #40000 1'b1;
	data[28] = #80000 1'b0;
	data[28] = #80000 1'b1;
	data[28] = #40000 1'b0;
end 
// data[ 27 ]
initial
begin
	data[27] = 1'b1;
	data[27] = #120000 1'b0;
	data[27] = #80000 1'b1;
	data[27] = #40000 1'b0;
	data[27] = #40000 1'b1;
	data[27] = #120000 1'b0;
	data[27] = #160000 1'b1;
	data[27] = #40000 1'b0;
	data[27] = #40000 1'b1;
	data[27] = #80000 1'b0;
end 
// data[ 26 ]
initial
begin
	data[26] = 1'b0;
	data[26] = #80000 1'b1;
	data[26] = #40000 1'b0;
	data[26] = #40000 1'b1;
	data[26] = #40000 1'b0;
	data[26] = #80000 1'b1;
	data[26] = #120000 1'b0;
	data[26] = #40000 1'b1;
	data[26] = #120000 1'b0;
	data[26] = #120000 1'b1;
	data[26] = #240000 1'b0;
end 
// data[ 25 ]
initial
begin
	data[25] = 1'b1;
	data[25] = #80000 1'b0;
	data[25] = #80000 1'b1;
	data[25] = #80000 1'b0;
	data[25] = #80000 1'b1;
	data[25] = #200000 1'b0;
	data[25] = #40000 1'b1;
	data[25] = #40000 1'b0;
	data[25] = #40000 1'b1;
	data[25] = #200000 1'b0;
end 
// data[ 24 ]
initial
begin
	data[24] = 1'b1;
	data[24] = #200000 1'b0;
	data[24] = #40000 1'b1;
	data[24] = #80000 1'b0;
	data[24] = #40000 1'b1;
	data[24] = #120000 1'b0;
	data[24] = #80000 1'b1;
	data[24] = #120000 1'b0;
	data[24] = #160000 1'b1;
	data[24] = #40000 1'b0;
	data[24] = #40000 1'b1;
	data[24] = #40000 1'b0;
end 
// data[ 23 ]
initial
begin
	data[23] = 1'b0;
	data[23] = #40000 1'b1;
	data[23] = #40000 1'b0;
	data[23] = #40000 1'b1;
	data[23] = #40000 1'b0;
	data[23] = #40000 1'b1;
	data[23] = #80000 1'b0;
	data[23] = #40000 1'b1;
	data[23] = #80000 1'b0;
	data[23] = #80000 1'b1;
	data[23] = #80000 1'b0;
	data[23] = #80000 1'b1;
	data[23] = #80000 1'b0;
	data[23] = #80000 1'b1;
	data[23] = #40000 1'b0;
	data[23] = #120000 1'b1;
end 
// data[ 22 ]
initial
begin
	data[22] = 1'b1;
	data[22] = #40000 1'b0;
	data[22] = #40000 1'b1;
	data[22] = #80000 1'b0;
	data[22] = #40000 1'b1;
	data[22] = #40000 1'b0;
	data[22] = #160000 1'b1;
	data[22] = #40000 1'b0;
	data[22] = #40000 1'b1;
	data[22] = #40000 1'b0;
	data[22] = #80000 1'b1;
	data[22] = #80000 1'b0;
	data[22] = #40000 1'b1;
	data[22] = #40000 1'b0;
	data[22] = #40000 1'b1;
	data[22] = #40000 1'b0;
	data[22] = #40000 1'b1;
end 
// data[ 21 ]
initial
begin
	data[21] = 1'b0;
	data[21] = #40000 1'b1;
	data[21] = #160000 1'b0;
	data[21] = #80000 1'b1;
	data[21] = #120000 1'b0;
	data[21] = #120000 1'b1;
	data[21] = #40000 1'b0;
	data[21] = #40000 1'b1;
	data[21] = #40000 1'b0;
	data[21] = #40000 1'b1;
	data[21] = #40000 1'b0;
	data[21] = #80000 1'b1;
	data[21] = #120000 1'b0;
	data[21] = #40000 1'b1;
end 
// data[ 20 ]
initial
begin
	data[20] = 1'b0;
	data[20] = #40000 1'b1;
	data[20] = #80000 1'b0;
	data[20] = #80000 1'b1;
	data[20] = #160000 1'b0;
	data[20] = #40000 1'b1;
	data[20] = #200000 1'b0;
	data[20] = #80000 1'b1;
	data[20] = #40000 1'b0;
	data[20] = #40000 1'b1;
	data[20] = #40000 1'b0;
	data[20] = #80000 1'b1;
	data[20] = #40000 1'b0;
	data[20] = #40000 1'b1;
end 
// data[ 19 ]
initial
begin
	data[19] = 1'b0;
	data[19] = #40000 1'b1;
	data[19] = #40000 1'b0;
	data[19] = #40000 1'b1;
	data[19] = #80000 1'b0;
	data[19] = #40000 1'b1;
	data[19] = #80000 1'b0;
	data[19] = #80000 1'b1;
	data[19] = #120000 1'b0;
	data[19] = #160000 1'b1;
	data[19] = #40000 1'b0;
	data[19] = #80000 1'b1;
	data[19] = #40000 1'b0;
end 
// data[ 18 ]
initial
begin
	data[18] = 1'b0;
	data[18] = #40000 1'b1;
	data[18] = #80000 1'b0;
	data[18] = #40000 1'b1;
	data[18] = #40000 1'b0;
	data[18] = #40000 1'b1;
	data[18] = #200000 1'b0;
	data[18] = #320000 1'b1;
	data[18] = #40000 1'b0;
end 
// data[ 17 ]
initial
begin
	data[17] = 1'b1;
	data[17] = #40000 1'b0;
	data[17] = #160000 1'b1;
	data[17] = #120000 1'b0;
	data[17] = #80000 1'b1;
	data[17] = #160000 1'b0;
	data[17] = #40000 1'b1;
	data[17] = #40000 1'b0;
	data[17] = #80000 1'b1;
	data[17] = #80000 1'b0;
	data[17] = #40000 1'b1;
	data[17] = #120000 1'b0;
end 
// data[ 16 ]
initial
begin
	data[16] = 1'b1;
	data[16] = #40000 1'b0;
	data[16] = #80000 1'b1;
	data[16] = #240000 1'b0;
	data[16] = #120000 1'b1;
	data[16] = #120000 1'b0;
	data[16] = #40000 1'b1;
	data[16] = #120000 1'b0;
	data[16] = #40000 1'b1;
	data[16] = #40000 1'b0;
	data[16] = #40000 1'b1;
	data[16] = #80000 1'b0;
end 
// data[ 15 ]
initial
begin
	data[15] = 1'b0;
	data[15] = #40000 1'b1;
	data[15] = #80000 1'b0;
	data[15] = #120000 1'b1;
	data[15] = #40000 1'b0;
	data[15] = #80000 1'b1;
	data[15] = #40000 1'b0;
	data[15] = #40000 1'b1;
	data[15] = #120000 1'b0;
	data[15] = #120000 1'b1;
	data[15] = #40000 1'b0;
end 
// data[ 14 ]
initial
begin
	data[14] = 1'b0;
	data[14] = #40000 1'b1;
	data[14] = #40000 1'b0;
	data[14] = #200000 1'b1;
	data[14] = #200000 1'b0;
	data[14] = #40000 1'b1;
	data[14] = #120000 1'b0;
	data[14] = #160000 1'b1;
	data[14] = #40000 1'b0;
	data[14] = #40000 1'b1;
	data[14] = #80000 1'b0;
end 
// data[ 13 ]
initial
begin
	data[13] = 1'b1;
	data[13] = #40000 1'b0;
	data[13] = #120000 1'b1;
	data[13] = #120000 1'b0;
	data[13] = #80000 1'b1;
	data[13] = #40000 1'b0;
	data[13] = #40000 1'b1;
	data[13] = #40000 1'b0;
	data[13] = #120000 1'b1;
	data[13] = #40000 1'b0;
	data[13] = #40000 1'b1;
	data[13] = #40000 1'b0;
	data[13] = #40000 1'b1;
	data[13] = #80000 1'b0;
	data[13] = #40000 1'b1;
	data[13] = #40000 1'b0;
	data[13] = #40000 1'b1;
end 
// data[ 12 ]
initial
begin
	data[12] = 1'b0;
	data[12] = #80000 1'b1;
	data[12] = #40000 1'b0;
	data[12] = #80000 1'b1;
	data[12] = #40000 1'b0;
	data[12] = #120000 1'b1;
	data[12] = #40000 1'b0;
	data[12] = #80000 1'b1;
	data[12] = #40000 1'b0;
	data[12] = #200000 1'b1;
	data[12] = #40000 1'b0;
	data[12] = #160000 1'b1;
	data[12] = #40000 1'b0;
end 
// data[ 11 ]
initial
begin
	data[11] = 1'b0;
	data[11] = #40000 1'b1;
	data[11] = #40000 1'b0;
	data[11] = #120000 1'b1;
	data[11] = #40000 1'b0;
	data[11] = #160000 1'b1;
	data[11] = #80000 1'b0;
	data[11] = #80000 1'b1;
	data[11] = #40000 1'b0;
	data[11] = #120000 1'b1;
	data[11] = #40000 1'b0;
	data[11] = #80000 1'b1;
	data[11] = #40000 1'b0;
	data[11] = #80000 1'b1;
end 
// data[ 10 ]
initial
begin
	data[10] = 1'b1;
	data[10] = #80000 1'b0;
	data[10] = #40000 1'b1;
	data[10] = #40000 1'b0;
	data[10] = #40000 1'b1;
	data[10] = #40000 1'b0;
	data[10] = #40000 1'b1;
	data[10] = #200000 1'b0;
	data[10] = #40000 1'b1;
	data[10] = #40000 1'b0;
	data[10] = #80000 1'b1;
	data[10] = #40000 1'b0;
	data[10] = #120000 1'b1;
	data[10] = #120000 1'b0;
end 
// data[ 9 ]
initial
begin
	data[9] = 1'b1;
	data[9] = #120000 1'b0;
	data[9] = #40000 1'b1;
	data[9] = #80000 1'b0;
	data[9] = #40000 1'b1;
	data[9] = #80000 1'b0;
	data[9] = #40000 1'b1;
	data[9] = #40000 1'b0;
	data[9] = #40000 1'b1;
	data[9] = #80000 1'b0;
	data[9] = #40000 1'b1;
	data[9] = #40000 1'b0;
	data[9] = #80000 1'b1;
	data[9] = #120000 1'b0;
	data[9] = #80000 1'b1;
	data[9] = #40000 1'b0;
end 
// data[ 8 ]
initial
begin
	data[8] = 1'b1;
	data[8] = #80000 1'b0;
	data[8] = #40000 1'b1;
	data[8] = #40000 1'b0;
	data[8] = #40000 1'b1;
	data[8] = #40000 1'b0;
	data[8] = #40000 1'b1;
	data[8] = #120000 1'b0;
	data[8] = #80000 1'b1;
	data[8] = #80000 1'b0;
	data[8] = #120000 1'b1;
	data[8] = #200000 1'b0;
	data[8] = #40000 1'b1;
	data[8] = #40000 1'b0;
end 
// data[ 7 ]
initial
begin
	data[7] = 1'b1;
	data[7] = #40000 1'b0;
	data[7] = #40000 1'b1;
	data[7] = #40000 1'b0;
	data[7] = #80000 1'b1;
	data[7] = #80000 1'b0;
	data[7] = #40000 1'b1;
	data[7] = #280000 1'b0;
	data[7] = #40000 1'b1;
	data[7] = #120000 1'b0;
	data[7] = #120000 1'b1;
	data[7] = #80000 1'b0;
end 
// data[ 6 ]
initial
begin
	data[6] = 1'b0;
	data[6] = #40000 1'b1;
	data[6] = #40000 1'b0;
	data[6] = #80000 1'b1;
	data[6] = #40000 1'b0;
	data[6] = #40000 1'b1;
	data[6] = #80000 1'b0;
	data[6] = #40000 1'b1;
	data[6] = #40000 1'b0;
	data[6] = #120000 1'b1;
	data[6] = #40000 1'b0;
	data[6] = #80000 1'b1;
	data[6] = #40000 1'b0;
	data[6] = #120000 1'b1;
	data[6] = #40000 1'b0;
	data[6] = #80000 1'b1;
	data[6] = #40000 1'b0;
end 
// data[ 5 ]
initial
begin
	data[5] = 1'b0;
	data[5] = #120000 1'b1;
	data[5] = #120000 1'b0;
	data[5] = #200000 1'b1;
	data[5] = #160000 1'b0;
	data[5] = #120000 1'b1;
	data[5] = #160000 1'b0;
	data[5] = #80000 1'b1;
end 
// data[ 4 ]
initial
begin
	data[4] = 1'b0;
	data[4] = #40000 1'b1;
	data[4] = #80000 1'b0;
	data[4] = #40000 1'b1;
	data[4] = #40000 1'b0;
	data[4] = #40000 1'b1;
	data[4] = #40000 1'b0;
	data[4] = #40000 1'b1;
	data[4] = #80000 1'b0;
	data[4] = #80000 1'b1;
	data[4] = #280000 1'b0;
	data[4] = #40000 1'b1;
	data[4] = #40000 1'b0;
	data[4] = #40000 1'b1;
	data[4] = #80000 1'b0;
end 
// data[ 3 ]
initial
begin
	data[3] = 1'b0;
	data[3] = #40000 1'b1;
	data[3] = #40000 1'b0;
	data[3] = #40000 1'b1;
	data[3] = #80000 1'b0;
	data[3] = #80000 1'b1;
	data[3] = #40000 1'b0;
	data[3] = #40000 1'b1;
	data[3] = #120000 1'b0;
	data[3] = #40000 1'b1;
	data[3] = #40000 1'b0;
	data[3] = #80000 1'b1;
	data[3] = #40000 1'b0;
	data[3] = #40000 1'b1;
	data[3] = #40000 1'b0;
	data[3] = #120000 1'b1;
end 
// data[ 2 ]
initial
begin
	data[2] = 1'b0;
	data[2] = #240000 1'b1;
	data[2] = #40000 1'b0;
	data[2] = #160000 1'b1;
	data[2] = #40000 1'b0;
	data[2] = #120000 1'b1;
	data[2] = #40000 1'b0;
	data[2] = #80000 1'b1;
	data[2] = #80000 1'b0;
	data[2] = #40000 1'b1;
	data[2] = #120000 1'b0;
end 
// data[ 1 ]
initial
begin
	data[1] = 1'b1;
	data[1] = #40000 1'b0;
	data[1] = #40000 1'b1;
	data[1] = #240000 1'b0;
	data[1] = #80000 1'b1;
	data[1] = #240000 1'b0;
	data[1] = #80000 1'b1;
	data[1] = #80000 1'b0;
	data[1] = #40000 1'b1;
end 
// data[ 0 ]
initial
begin
	data[0] = 1'b1;
	data[0] = #40000 1'b0;
	data[0] = #40000 1'b1;
	data[0] = #200000 1'b0;
	data[0] = #40000 1'b1;
	data[0] = #40000 1'b0;
	data[0] = #40000 1'b1;
	data[0] = #120000 1'b0;
	data[0] = #80000 1'b1;
	data[0] = #40000 1'b0;
	data[0] = #120000 1'b1;
	data[0] = #40000 1'b0;
	data[0] = #40000 1'b1;
	data[0] = #40000 1'b0;
	data[0] = #40000 1'b1;
end 
// rdaddress[ 11 ]
initial
begin
	rdaddress[11] = 1'b0;
end 
// rdaddress[ 10 ]
initial
begin
	rdaddress[10] = 1'b0;
end 
// rdaddress[ 9 ]
initial
begin
	rdaddress[9] = 1'b0;
end 
// rdaddress[ 8 ]
initial
begin
	rdaddress[8] = 1'b1;
end 
// rdaddress[ 7 ]
initial
begin
	rdaddress[7] = 1'b0;
end 
// rdaddress[ 6 ]
initial
begin
	rdaddress[6] = 1'b0;
end 
// rdaddress[ 5 ]
initial
begin
	rdaddress[5] = 1'b0;
end 
// rdaddress[ 4 ]
initial
begin
	rdaddress[4] = 1'b1;
end 
// rdaddress[ 3 ]
initial
begin
	rdaddress[3] = 1'b0;
end 
// rdaddress[ 2 ]
initial
begin
	rdaddress[2] = 1'b0;
end 
// rdaddress[ 1 ]
initial
begin
	rdaddress[1] = 1'b0;
end 
// rdaddress[ 0 ]
initial
begin
	rdaddress[0] = 1'b1;
end 
// wraddress[ 11 ]
initial
begin
	wraddress[11] = 1'b0;
end 
// wraddress[ 10 ]
initial
begin
	wraddress[10] = 1'b0;
end 
// wraddress[ 9 ]
initial
begin
	wraddress[9] = 1'b0;
end 
// wraddress[ 8 ]
initial
begin
	wraddress[8] = 1'b1;
end 
// wraddress[ 7 ]
initial
begin
	wraddress[7] = 1'b0;
end 
// wraddress[ 6 ]
initial
begin
	wraddress[6] = 1'b0;
end 
// wraddress[ 5 ]
initial
begin
	wraddress[5] = 1'b0;
end 
// wraddress[ 4 ]
initial
begin
	wraddress[4] = 1'b1;
end 
// wraddress[ 3 ]
initial
begin
	wraddress[3] = 1'b0;
end 
// wraddress[ 2 ]
initial
begin
	wraddress[2] = 1'b0;
end 
// wraddress[ 1 ]
initial
begin
	wraddress[1] = 1'b0;
end 
// wraddress[ 0 ]
initial
begin
	wraddress[0] = 1'b1;
end 

// wren
initial
begin
	wren = 1'b1;
end 
endmodule

